import telebot
import keyboards
import random
import myparser
import datetime

TOKEN = '848608026:AAG2Ot5u01DEB-FjFqk3s-0KZ14RjJvgMPY'
bot = telebot.TeleBot(TOKEN)


def msg_format(date, name, about, image, where, count, price, buy, link_where, btn_date):
    if btn_date == date.date():
        if count:
            if link_where:
                msg = f'üïØ*{name}*\nüïê–ù–∞—á–∞–ª–æ: *{date.strftime("%H:%M, %d %b")}*\n„ÄΩÔ∏è–ì–¥–µ: ' +\
                      f'[{where}]({link_where})\nüîπ–¶–µ–Ω–∞ *{price}*\nüî∏–û—Å—Ç–∞–ª–æ—Å—å: [{count}]({about})'
            else:
                msg = f'üïØ*{name}*\nüïê–ù–∞—á–∞–ª–æ: *{date.strftime("%H:%M, %d %b")}*\n„ÄΩÔ∏è–ì–¥–µ: *{where}*\nüîπ–¶–µ–Ω–∞ *{price}*\n' +\
                      f'üî∏–û—Å—Ç–∞–ª–æ—Å—å: [{count}]({about})'
            return msg


def get_post(data, chat_id, btn_date):
    send = False
    for i in range(len(data)):
        report = msg_format(
            data[i]['date'], data[i]['name'], data[i]['about'], data[i]['image'], data[i]['where'],
            data[i]['count'], data[i]['price'], data[i]['buy'], data[i]['link_where'], btn_date=btn_date
        )
        if report:
            bot.send_message(chat_id, report, parse_mode='Markdown', disable_web_page_preview=False)
            send = True
    if not send:
        bot.send_message(chat_id, '–ö–∞–∂–µ—Ç—Å—è, –∑–¥–µ—Å—å –ø—É—Å—Ç–æ...')


@bot.message_handler(commands=['start'])
def start_command(message):
    report = 'üëã–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–Ω–∏–∑—É'
    bot.send_message(message.chat.id, report, reply_markup=keyboards.top_markup())
    bot.register_next_step_handler(message, top)


@bot.message_handler(commands=['help'])
def help_command(message):
    report = '1Ô∏è‚É£–•–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é?\n2Ô∏è‚É£–ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n‚ÄºÔ∏è–ü–∏—à–∏ /start‚ÄºÔ∏è'
    bot.send_message(message.chat.id, report, reply_markup=keyboards.top_markup())
    bot.register_next_step_handler(message, top)


def top(message):
    chat_id = message.chat.id
    if message.text == 'üèÜ–ë–æ–ª—å—à–æ–π —Ç–µ–∞—Ç—Ä':
        report = '`–ß—É—Ç—å-—á—É—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏—è... –µ—â—ë —á—É—Ç—å-—á—É—Ç—å...`'
        bot.send_message(chat_id, report, parse_mode='Markdown')
        data = myparser.get_big()
        report = '‚úÖ–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä'
        bot.send_message(chat_id, report, reply_markup=keyboards.filters_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, filters, data)
    elif message.text == 'üèÖ–ú–∞–ª—ã–π —Ç–µ–∞—Ç—Ä':
        report = '`–ß—É—Ç—å-—á—É—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏—è... –µ—â—ë —á—É—Ç—å-—á—É—Ç—å...`'
        bot.send_message(chat_id, report, parse_mode='Markdown')
        data = myparser.get_small()
        report = '‚úÖ–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä'
        bot.send_message(chat_id, report, reply_markup=keyboards.filters_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, filters, data)
    elif message.text == 'ü•á–¢–µ–∞—Ç—Ä –∏–º. –ê.–°. –ü—É—à–∫–∏–Ω–∞':
        report = '`–ß—É—Ç—å-—á—É—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏—è... –µ—â—ë —á—É—Ç—å-—á—É—Ç—å...`'
        bot.send_message(chat_id, report, parse_mode='Markdown')
        data = myparser.get_pushkin()
        facts = [
            '*–ê–ª–∫–æ–≥–æ–ª—å*\n–ü—É—à–∫–∏–Ω –ª—é–±–∏–ª —à–∞–º–ø–∞–Ω—Å–∫–æ–µ, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –æ–Ω –æ—Ç–¥–∞–≤–∞–ª —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–º—É "–í–¥–æ–≤–∞ –ö–ª–∏–∫–æ"',
            '*–ë–∞–∫–µ–Ω–±–∞—Ä–¥—ã*\n–ü—É—à–∫–∏–Ω –Ω–æ—Å–∏–ª –±–∞–∫–µ–Ω–±–∞—Ä–¥—ã. –î–≤–æ—Ä–æ–≤—ã–µ –≤ —É—Å–∞–¥—å–±–µ "–ú–∏—Ö–∞–π–ª–æ–≤—Å–∫–æ–µ" –Ω–∞–∑—ã–≤–∞–ª–∏ –∏—Ö "–±–æ–∫–æ—É—à–∞–º–∏"',
            '*–ë–æ–∫—Å*\n–ü—É—à–∫–∏–Ω –∑–∞–Ω–∏–º–∞–ª—Å—è –±–æ–∫—Å–æ–º –∏ –±—ã–ª –ø–µ—Ä–≤—ã–º –≤ –†–æ—Å—Å–∏–∏, –∫—Ç–æ ' +
            '–Ω–∞—á–∞–ª –≤—ã–ø–∏—Å—ã–≤–∞—Ç—å –∏–∑ –ê–Ω–≥–ª–∏–∏ –∫–Ω–∏–≥–∏ –ø–æ —ç—Ç–æ–º—É –≤–∏–¥—É —Å–ø–æ—Ä—Ç–∞',
            '*–î—É—ç–ª–∏*\n–ü—É—à–∫–∏–Ω —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ 29 –¥—É—ç–ª—è—Ö, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å—Ç—Ä–µ–ª—è–ª –ø–µ—Ä–≤—ã–º',
            '*–¢—Ä–æ—Å—Ç—å*\n–ß—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è –º–µ—Ç–∫–æ–π —Å—Ç—Ä–µ–ª—å–±—ã –∏ —Ç–≤–µ—Ä–¥–æ—Å—Ç–∏ —Ä—É–∫–∏, –ü—É—à–∫–∏–Ω ' +
            '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ –Ω–æ—Å–∏–ª —Å —Å–æ–±–æ–π –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫—É—é —Ç—Ä–æ—Å—Ç—å –≤–µ—Å–æ–º 16 –∫–≥.',
            '*–ú–∞–Ω–∏–∫—é—Ä*\n–ü–æ—ç—Ç –¥–µ–ª–∞–ª –º–∞–Ω–∏–∫—é—Ä –∏ –æ—Ç—Ä–∞—â–∏–≤–∞–ª –Ω–æ–≥–æ—Ç—å –Ω–∞ –º–∏–∑–∏–Ω—Ü–µ',
            '*–ö–∞—Ä—Ç—ã*\n–ü—É—à–∫–∏–Ω –±—ã–ª –∑–∞—è–¥–ª—ã–º –∫–∞—Ä—Ç–µ–∂–Ω–∏–∫–æ–º, –≤ –∫–∞—Ä—Ç–æ—Ç–µ–∫–µ –∂–∞–Ω–¥–∞—Ä–º–µ—Ä–∏–∏ –æ–Ω ' +
            '—á–∏—Å–ª–∏–ª—Å—è –∫–∞–∫ "–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤ –ú–æ—Å–∫–≤–µ –±–∞–Ω–∫–æ–º–µ—Ç". –í 1829 –≥–æ–¥—É –ø–æ—ç—Ç –∑–∞ —Ä–∞–∑ ' +
            '–ø—Ä–æ–∏–≥—Ä–∞–ª —Ü–µ–ª–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - 24 800 —Ä—É–±. –û–¥–Ω–∞ –∫–æ—Ä–æ–≤–∞ –≤ —Ç–æ –≤—Ä–µ–º—è —Å—Ç–æ–∏–ª–∞ 3 —Ä—É–±–ª—è',
            '*–ñ–µ–Ω—â–∏–Ω—ã*\n–í 1829 –≥–æ–¥—É –ø–æ—ç—Ç —Å–æ—Å—Ç–∞–≤–∏–ª —Å–ø–∏—Å–æ–∫ –∂–µ–Ω—â–∏–Ω, –∫–æ—Ç–æ—Ä—ã–º–∏ —É–≤–ª–µ–∫–∞–ª—Å—è. ' +
            '–í –Ω–µ–º –±—ã–ª–æ 37 –∂–µ–Ω—Å–∫–∏—Ö –∏–º–µ–Ω. –í –ø–∏—Å—å–º–µ –∫–Ω—è–≥–∏–Ω–µ –í. –í—è–∑–µ–º—Å–∫–æ–π –ø–æ—ç—Ç –ø—Ä–∏–∑–Ω–∞–ª—Å—è, ' +
            '—á—Ç–æ —Å—É–ø—Ä—É–≥–∞ –ù.–ì–æ–Ω—á–∞—Ä–æ–≤–∞ —è–≤–ª—è–µ—Ç—Å—è –µ–≥–æ 130-–π –ª—é–±–æ–≤—å—é'
        ]
        report = random.choice(facts)
        bot.send_message(chat_id, report, reply_markup=keyboards.filters_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, filters, data)
    elif message.text == 'ü•à–ú–•–¢ –∏–º. –ê.–ü. –ß–µ—Ö–æ–≤–∞':
        report = '`–ß—É—Ç—å-—á—É—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏—è... –µ—â—ë —á—É—Ç—å-—á—É—Ç—å...`'
        bot.send_message(chat_id, report, parse_mode='Markdown')
        data = myparser.get_chehov()
        report = '‚úÖ–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä'
        bot.send_message(chat_id, report, reply_markup=keyboards.filters_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, filters, data)
    elif message.text == 'ü•â–ì–æ–≥–æ–ª—å-—Ü–µ–Ω—Ç—Ä':
        report = '`–ß—É—Ç—å-—á—É—Ç—å —Ç–µ—Ä–ø–µ–Ω–∏—è... –µ—â—ë —á—É—Ç—å-—á—É—Ç—å...`'
        bot.send_message(chat_id, report, parse_mode='Markdown')
        data = myparser.get_gogol()
        report = '‚úÖ–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä'
        bot.send_message(chat_id, report, reply_markup=keyboards.filters_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, filters, data)
    elif reset(message):
        pass
    else:
        report = '‚ùóÔ∏è–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–Ω–∏–∑—É!'
        bot.send_message(chat_id, report, reply_markup=keyboards.top_markup())
        bot.register_next_step_handler(message, top)


def filters(message, data=None):
    chat_id = message.chat.id
    now = (datetime.datetime.now() + datetime.timedelta(hours=3))
    if message.text == '‚ÄºÔ∏è–°–µ–≥–æ–¥–Ω—è':
        btn_date = now.date()
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, filters, data)
    elif message.text == '‚ùóÔ∏è–ó–∞–≤—Ç—Ä–∞':
        btn_date = (now + datetime.timedelta(days=1)).date()
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, filters, data)
    elif message.text == 'üìÜ–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É':
        report = '–í—ã–±–∏—Ä–∞–π —Å–∫–æ—Ä–µ–µ!'
        bot.send_message(chat_id, report, reply_markup=keyboards.now_markup())
        bot.register_next_step_handler(message, now_date, data)
    elif message.text == 'üîô–ù–∞–∑–∞–¥üîô':
        report = '‚úÖ–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        bot.send_message(chat_id, report, reply_markup=keyboards.top_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, top)
    elif reset(message):
        pass
    else:
        report = '‚ùóÔ∏è–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–Ω–∏–∑—É!'
        bot.send_message(message.chat.id, report, reply_markup=keyboards.filters_markup())
        bot.register_next_step_handler(message, filters, data)


def now_date(message, data, state=0):
    chat_id = message.chat.id
    if message.text == '1':
        if state == 0:
            date = datetime.datetime(2019, 12, 1).date()
        else:
            date = datetime.datetime(2020, 1, 1).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '2':
        if state == 0:
            date = datetime.datetime(2019, 12, 2).date()
        else:
            date = datetime.datetime(2020, 1, 2).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '3':
        if state == 0:
            date = datetime.datetime(2019, 12, 3).date()
        else:
            date = datetime.datetime(2020, 1, 3).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '4':
        if state == 0:
            date = datetime.datetime(2019, 12, 4).date()
        else:
            date = datetime.datetime(2020, 1, 4).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '5':
        if state == 0:
            date = datetime.datetime(2019, 12, 5).date()
        else:
            date = datetime.datetime(2020, 1, 5).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '6':
        if state == 0:
            date = datetime.datetime(2019, 12, 6).date()
        else:
            date = datetime.datetime(2020, 1, 6).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '7':
        if state == 0:
            date = datetime.datetime(2019, 12, 7).date()
        else:
            date = datetime.datetime(2020, 1, 7).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '8':
        if state == 0:
            date = datetime.datetime(2019, 12, 8).date()
        else:
            date = datetime.datetime(2020, 1, 8).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '9':
        if state == 0:
            date = datetime.datetime(2019, 12, 9).date()
        else:
            date = datetime.datetime(2020, 1, 9).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '10':
        if state == 0:
            date = datetime.datetime(2019, 12, 10).date()
        else:
            date = datetime.datetime(2020, 1, 10).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '11':
        if state == 0:
            date = datetime.datetime(2019, 12, 11).date()
        else:
            date = datetime.datetime(2020, 1, 11).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '12':
        if state == 0:
            date = datetime.datetime(2019, 12, 12).date()
        else:
            date = datetime.datetime(2020, 1, 12).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '13':
        if state == 0:
            date = datetime.datetime(2019, 12, 13).date()
        else:
            date = datetime.datetime(2020, 1, 13).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '14':
        if state == 0:
            date = datetime.datetime(2019, 12, 14).date()
        else:
            date = datetime.datetime(2020, 1, 14).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '15':
        if state == 0:
            date = datetime.datetime(2019, 12, 15).date()
        else:
            date = datetime.datetime(2020, 1, 15).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '16':
        if state == 0:
            date = datetime.datetime(2019, 12, 16).date()
        else:
            date = datetime.datetime(2020, 1, 16).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '17':
        if state == 0:
            date = datetime.datetime(2019, 12, 17).date()
        else:
            date = datetime.datetime(2020, 1, 17).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '18':
        if state == 0:
            date = datetime.datetime(2019, 12, 18).date()
        else:
            date = datetime.datetime(2020, 1, 18).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '19':
        if state == 0:
            date = datetime.datetime(2019, 12, 19).date()
        else:
            date = datetime.datetime(2020, 1, 19).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '20':
        if state == 0:
            date = datetime.datetime(2019, 12, 20).date()
        else:
            date = datetime.datetime(2020, 1, 20).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '21':
        if state == 0:
            date = datetime.datetime(2019, 12, 21).date()
        else:
            date = datetime.datetime(2020, 1, 21).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '22':
        if state == 0:
            date = datetime.datetime(2019, 12, 22).date()
        else:
            date = datetime.datetime(2020, 1, 22).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '23':
        if state == 0:
            date = datetime.datetime(2019, 12, 23).date()
        else:
            date = datetime.datetime(2020, 1, 23).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '24':
        if state == 0:
            date = datetime.datetime(2019, 12, 24).date()
        else:
            date = datetime.datetime(2020, 1, 24).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '25':
        if state == 0:
            date = datetime.datetime(2019, 12, 25).date()
        else:
            date = datetime.datetime(2020, 1, 25).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '26':
        if state == 0:
            date = datetime.datetime(2019, 12, 26).date()
        else:
            date = datetime.datetime(2020, 1, 26).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '27':
        if state == 0:
            date = datetime.datetime(2019, 12, 27).date()
        else:
            date = datetime.datetime(2020, 1, 27).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '28':
        if state == 0:
            date = datetime.datetime(2019, 12, 28).date()
        else:
            date = datetime.datetime(2020, 1, 28).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '29':
        if state == 0:
            date = datetime.datetime(2019, 12, 29).date()
        else:
            date = datetime.datetime(2020, 1, 29).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '30':
        if state == 0:
            date = datetime.datetime(2019, 12, 30).date()
        else:
            date = datetime.datetime(2020, 1, 30).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '31':
        if state == 0:
            date = datetime.datetime(2019, 12, 31).date()
        else:
            date = datetime.datetime(2020, 1, 31).date()
        btn_date = date
        get_post(data, chat_id, btn_date)
        bot.register_next_step_handler(message, now_date, data, state)
    elif message.text == '‚û°Ô∏è':
        m = (datetime.datetime.now() + datetime.timedelta(days=30)).strftime("%B")
        bot.send_message(chat_id, f'–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü: {m}',
                         reply_markup=keyboards.now_markup(1))
        bot.register_next_step_handler(message, now_date, data=data, state=1)
    elif message.text == 'üîô–ù–∞–∑–∞–¥üîô':
        report = '`–®–∞–≥ –Ω–∞–∑–∞–¥!` - –í—ã–ø–æ–ª–Ω–∏–ª.\n–î–∞–≤–∞–π –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±–µ–∑ "!", –∞?'
        bot.send_message(chat_id, report, reply_markup=keyboards.filters_markup(), parse_mode='Markdown')
        bot.register_next_step_handler(message, filters, data)
    elif reset(message):
        pass
    elif state == 1:
        if message.text == '‚¨ÖÔ∏è':
            m = datetime.datetime.now().strftime('%B')
            bot.send_message(chat_id, f'–ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü: {m}', reply_markup=keyboards.now_markup(0))
            bot.register_next_step_handler(message, now_date, data=data, state=0)
        else:
            report = '‚ùóÔ∏è–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–Ω–∏–∑—É!'
            bot.send_message(message.chat.id, report, reply_markup=keyboards.now_markup(1))
            bot.register_next_step_handler(message, now_date, data, state=1)
    else:
        report = '‚ùóÔ∏è–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–Ω–∏–∑—É!'
        bot.send_message(message.chat.id, report, reply_markup=keyboards.now_markup())
        bot.register_next_step_handler(message, now_date, data, state)


def reset(message):
    if message.text == '/start':
        start_command(message)
        return True
    elif message.text == '/help':
        help_command(message)
        return True
    return False


if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)
